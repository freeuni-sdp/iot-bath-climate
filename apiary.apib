FORMAT: 1A
HOST: https://bath-climate.herokuapp.com/bathclimate

# bathclimate

bathclimate is a simple API allowing consumers to change bath climate.

## Ping  [/ping]

### Ping service [GET]

allows customers to see if service is running

+ Response 200 (application/json)

        {
            "test": "bathclimate"

        }
 
 
## get current humidity [/current_humidity/house/{house_id}/sensor/{sensor_id}]

### Retrive a current humidity in bath [GET]

Returns a current humidity value in bath.

+ Parameters
    + house_id (number) - ID of house
    + sensor_id (number) - ID of sensor in house

+ Response 200 (application/json)
    + Body

            {
                "humidity": 21.5
            }
        
        
## is light turn on [/is_light_turn_on/house/{house_id}/sensor/{sensor_id}]

### Finds out is Light turn on or off in bath [GET]

Returns true if light is turn on in bath, false - otherwise.

+ Parameters
    + house_id (number) - ID of house
    + sensor_id (number) - ID of sensor in house
    
+ Response 200 (application/json)
    + Body

            {
                "turnOn": true
            }
            
            
## is ventilation turn on [/is_vent_turn_on/house/{house_id}/sensor/{sensor_id}]

### Finds out is ventilation on or off in bath [GET]

Returns true if ventilation is turn on in bath, false - otherwise.

+ Parameters
    + house_id (number) - ID of house
    + sensor_id (number) - ID of sensor in house

+ Response 200 (application/json)
    + Body

            {
                "turnOn": true
            }
            

## light sensors collection [/light_sensors_states/house/{house_id}]

### Finds out light sensors state [GET]

Returns light sensors states for the given house.

+ Parameters
    + house_id (int) - ID of house
    
+ Response 200 (application/json)
    + Body
        
            {
                "sensors":  [
                                {
                                    "sensor_1": true
                                },
                                {
                                    "sensor_2": false
                                }
                            ]
            }


## light sensors collection [/light_sensors_states]

### Finds out light sensors states [GET]

Returns all light sensor state from every house.

+ Response 200 (applicaion/json)
    + Body
    
            {
                "sensors":  [
                                {
                                    "house_1":  [
                                                    {
                                                        "sensor_1": true
                                                    },
                                                    {
                                                        "sensor_2": false
                                                    }
                                                ]
                                },
                                {
                                    "house_2":  [
                                                    {
                                                        "sensor_1": false
                                                    }
                                                ]
                                }
                            ]
            }


## turn ventilation [/turn_vent/{on_off}/house/{house_id}/sensor/{sensor_id}]

### Changes ventilation state [PUT]

Turns on ventilation if it is off and vice-versa.

+ Parameters
    + on_off (boolean) - according to turn on or off ventilation.
    + house_id (number) - ID of house
    + sensor_id (number) - ID of sensor in house

+ Response 200 (applicaion/json)

+ Response 503 (application/json)
    + Body
    
            {
                "reason": "Hardware problem!"
            }