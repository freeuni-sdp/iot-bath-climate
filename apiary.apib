FORMAT: 1A
HOST: https://bath-climate.herokuapp.com/bathclimate

# bathclimate

bathclimate is a simple API allowing consumers to change bath climate.

## Ping  [/ping]

### Ping service [GET]

allows customers to see if service is running

+ Response 200 (application/json)

        {
            "test": "bathclimate"

        }
 
 
## Get current humidity [/current_humidity/houses/{house_id}/rooms/{room_id}]

### Retrieve a current humidity in bath [GET]

Returns a current humidity value in bath.

+ Parameters
    + house_id  (number) - ID of house
    + room_id   (number) - ID of bath in house

+ Response 200 (application/json)
    + Body

            {
                "humidity": 21.5,
                "measurement_time": "2016-06-11T14:25:43.122Z"
            }

## Recent measurement collection [/measurements/{quantity}/houses/{house_id}/rooms/{room_id}]

### Retrieve specified quantity of humidity [GET]

Returns specific number of most recent measurements 
sorted in descending order in respect to time.

+ Parameters
    + quantity  (number) - count of requested measurements
    + house_id  (number) - ID of house
    + room_id   (number) - ID of bath in house 

+ response 200 (application/json)
    + Body
            
            {
                "measurements": [
                                    {
                                        "humidity": 50.12,
                                        "measurement_time": "2016-06-11T14:25:43.122Z"
                                    },
                                    {
                                        "humidity": 54.16,
                                        "measurement_time": "2016-06-11T14:24:41.432Z"
                                    },
                                    {
                                        "humidity": 63.52,
                                        "measurement_time": "2016-06-11T14:23:41.223Z"
                                    }
                                ]
            }

+ Response 409 (application/json)
    + Body
            
            {
                "max_measurements": 100
            }

        
## Is light turn on [/is_light_turn_on/house/{house_id}/room/{room_id}]

### Finds out is Light turn on or off in bath [GET]

Returns true if light is turn on in bath, false - otherwise.

+ Parameters
    + house_id (number) - ID of house
    + room_id  (number) - ID of bath in house
    
+ Response 200 (application/json)
    + Body

            {
                "is_light_on": true,
                "light_switch_time": "2016-06-11T22:13:06.460Z"
            }
            
            
## Light sensors collection [/light_sensors_states/house/{house_id}]

### Finds out light sensors states [GET]

Returns light sensors states for the given house.

+ Parameters
    + house_id (number) - ID of house
    
+ Response 200 (application/json)
    + Body
        
            {
                "rooms":    [  
                                {
                                    "is_light_on": true,
                                    "light_switch_time": "2016-06-11T22:11:45.513Z"
                                },
                                {
                                    "is_light_on": false,
                                    "light_switch_time": "2016-06-11T22:14:51.073Z"
                                },
                                {
                                    "is_light_on": false,
                                    "light_switch_time": "2016-06-11T22:15:07.220Z"
                                }
                            ]
            }


## Light sensors collection [/light_sensors_states]

### Finds out light sensors states [GET]

Returns all light sensor state from every house.

+ Response 200 (applicaion/json)
    + Body
    
            {   
                "houses":
                    [   
                        {
                            "house_id": "1",
                            "rooms":
                                [  
                                    {
                                        "is_light_on": "true",
                                        "light_switch_time": "2016-06-11T22:13:16.673Z"
                                    },
                                    {
                                        "is_light_on": "false",
                                        "light_switch_time": "2016-06-11T22:10:53.490Z"
                                    }
                                ]
                        },
                        {
                            "house_id": "2",
                            "rooms":
                                [  
                                    {
                                        "is_light_on": "false",
                                        "light_switch_time": "2016-06-11T22:25:07.224Z"
                                    },
                                    {
                                        "is_light_on": "true",
                                        "light_switch_time": "2016-06-11T22:45:00.056Z"
                                    },
                                    {
                                        "is_light_on": "false",
                                        "light_switch_time": "2016-06-11T22:00:59.304Z"
                                    }
                                ]
                        },
                        {
                            "house_id": "3",
                            "rooms":
                                [
                                    {
                                        "is_light_on": "true",
                                        "light_switch_time": "2016-06-11T22:15:07.220Z"
                                    }
                                ]    
                        }    
                    ]
            }


## Is ventilation turn on [/is_vent_turn_on/houses/{house_id}/bath_vent/{bath_vent_id}]

### Finds out is ventilation on or off in bath [GET]

Returns true if ventilation is turn on in bath, false - otherwise.

+ Parameters
    + house_id      (number) - ID of house
    + bath_vent_id  (number) - ID of sensor in house

+ Response 200 (application/json)
    + Body

            {
                "turn_on": true
            }


## Turn ventilation [/turn_vent/{on_off}/houses/{house_id}/bath_vent/{bath_vent_id}]

### Changes ventilation state [PUT]

Turns on ventilation if it is off and vice-versa.

+ Parameters
    + on_off    (boolean) - according to turn on or off ventilation.
    + house_id  (number)  - ID of house
    + vent_id   (number)  - ID of sensor in house

+ Response 200 (applicaion/json)

+ Response 503 (application/json)
    + Body
    
            {
                "reason": "Hardware problem!"
            }